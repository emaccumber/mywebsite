---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getImage } from 'astro:assets';
import { films, getFilmThumbnail, getFilmPoster } from '../data/films.js';

const pageTitle = "Films";

// Transform film data for display with optimized posters
const filmsWithThumbnails = await Promise.all(
  films.map(async (film) => {
    const posterUrl = getFilmPoster(film.slug);
    const optimizedPoster = await getImage({
      src: posterUrl,
      format: 'webp',
      width: 600,
      height: 800,
    });

    return {
      ...film,
      thumbnail: getFilmThumbnail(film.slug),
      poster: optimizedPoster.src,
    };
  })
);
---

<BaseLayout pageTitle={pageTitle}>
	<div class="films-grid">
		{filmsWithThumbnails.map(film => (
			<a href={`/films/${film.slug}`} class="film-card">
				<div class="film-thumbnail-container">
					<img
						class="film-thumbnail-image"
						src={film.poster}
						alt={film.name}
					/>
					<video
						class="film-thumbnail-video"
						poster={film.poster}
						muted
						preload="auto"
						playsinline
						disablepictureinpicture
						crossorigin="anonymous"
						data-film={film.slug}
						data-video-src={film.thumbnail}
					></video>
				</div>
				<h3 class="film-title">{film.name}</h3>
			</a>
		))}
	</div>
</BaseLayout>

<style>
	.films-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
		gap: 2rem;
		margin-top: 1rem;
	}

	.film-card {
		text-decoration: none;
		color: inherit;
		transition: transform 0.2s;
		display: block;
	}

	.film-thumbnail-container {
		width: 100%;
		height: 300px;
		position: relative;
		overflow: hidden;
	}

	.film-thumbnail-image,
	.film-thumbnail-video {
		width: 100%;
		height: 100%;
		object-fit: contain;
		object-position: center bottom;
		cursor: pointer;
	}

	.film-title {
		margin: 0.5rem 0 0 0;
		font-size: 1rem;
		color: var(--text-primary);
		text-align: center;
	}

	@media (max-width: 768px) {
		.films-grid {
			grid-template-columns: 1fr;
			gap: 2rem;
		}

		.film-thumbnail-container {
			height: 250px;
		}
	}

	@media (min-width: 769px) and (max-width: 1024px) {
		.films-grid {
			grid-template-columns: repeat(2, 1fr);
		}
	}

	@media (min-width: 1025px) {
		.films-grid {
			grid-template-columns: repeat(3, 1fr);
		}
	}
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
  // Detect if device is touch-enabled (mobile)
  const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;

  // Only load and enable videos on desktop
  if (!isTouchDevice) {
    const videos = document.querySelectorAll('.film-thumbnail-video');
    const images = document.querySelectorAll('.film-thumbnail-image');

    // Hide static images on desktop, show videos
    images.forEach(img => {
      img.style.display = 'none';
    });

    // Load videos on desktop only
    videos.forEach(video => {
      const videoSrc = video.dataset.videoSrc;
      if (videoSrc) {
        video.src = videoSrc;
        video.load();
      }

      const filmCard = video.closest('.film-card');

      filmCard.addEventListener('mouseenter', () => {
        if (!video.ended && video.readyState >= 2) {
          video.play().catch(() => {});
        }
      });

      filmCard.addEventListener('mouseleave', () => {
        if (!video.ended) {
          video.pause();
        }
      });
    });
  } else {
    // On mobile, hide videos and keep static images
    const videos = document.querySelectorAll('.film-thumbnail-video');
    videos.forEach(video => {
      video.style.display = 'none';
    });
  }
});
</script>
