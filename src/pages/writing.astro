---
import BaseLayout from '../layouts/BaseLayout.astro';
const pageTitle = "Writing";

// Blog posts data
const posts = [
	{
		title: "Green Spaces, Clear Mind: My Favorite Parks in New York City",
		date: "12/23/24",
		url: "/mywebsite/writing/nyc-parks",
		tags: ["NYC"]
	},
	{
		title: "Context Engineering for Large Language Models: A Practical Guide", 
		date: "11/5/24",
		url: "/mywebsite/writing/llm-context-engineering",
		tags: ["AI", "data science"]
	},
	{
		title: "Heroes in the Shadow of Terror: How Marvel Films Reflect Post-9/11 America",
		date: "1/15/24", 
		url: "/mywebsite/writing/marvel-terrorism",
		tags: ["movies"]
	}
];

// Get all unique tags
const allTags = [...new Set(posts.flatMap(post => post.tags))].sort();
---

<BaseLayout pageTitle={pageTitle}>
	<div class="writing-container">
		<div class="tags-filter">
			{allTags.map((tag) => (
				<button class="tag-button" data-tag={tag}>{tag}</button>
			))}
		</div>
		
		<div class="writing-list">
			{posts.map((post) => (
				<div class="post-item" data-tags={post.tags.join(',')}>
					<a href={post.url} class="post-title">{post.title}</a><span class="post-date">, {post.date}</span>
				</div>
			))}
		</div>
	</div>
</BaseLayout>

<style>
	.writing-container {
		max-width: 800px;
		margin: 0 auto;
	}

	.tags-filter {
		margin-bottom: 2rem;
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
	}

	.tag-button {
		background: none;
		border: 1px solid #ccc;
		padding: 0.25rem 0.75rem;
		border-radius: 0.25rem;
		cursor: pointer;
		font-size: 0.875rem;
		color: inherit;
		transition: all 0.2s;
	}

	.tag-button:hover {
		border-color: #666;
	}

	.tag-button.active {
		background: #000;
		color: #fff;
		border-color: #000;
	}

	html.dark .tag-button {
		border-color: #666;
	}

	html.dark .tag-button:hover {
		border-color: #999;
	}

	html.dark .tag-button.active {
		background: #fff;
		color: #000;
		border-color: #fff;
	}

	.writing-list {
		font-size: 1.25rem;
	}

	.post-item {
		margin-bottom: 1.5rem;
		line-height: 1.5;
		transition: opacity 0.3s;
	}

	.post-item.hidden {
		display: none;
	}

	.post-title {
		text-decoration: none;
		color: inherit;
	}

	.post-title:hover {
		text-decoration: underline;
	}

	.post-date {
		color: #666;
	}

	html.dark .post-date {
		color: #999;
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const tagButtons = document.querySelectorAll('.tag-button');
		const postItems = document.querySelectorAll('.post-item');
		const activeTags = new Set();

		function filterPosts() {
			postItems.forEach(item => {
				const postTags = item.dataset.tags.split(',');
				const shouldShow = activeTags.size === 0 || 
					[...activeTags].every(activeTag => postTags.includes(activeTag));
				
				item.classList.toggle('hidden', !shouldShow);
			});
		}

		tagButtons.forEach(button => {
			button.addEventListener('click', () => {
				const tag = button.dataset.tag;
				
				if (activeTags.has(tag)) {
					activeTags.delete(tag);
					button.classList.remove('active');
				} else {
					activeTags.add(tag);
					button.classList.add('active');
				}
				
				filterPosts();
			});
		});
	});
</script>